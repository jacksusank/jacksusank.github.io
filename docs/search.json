[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Resume as of 2/5/2024",
    "section": "",
    "text": "Hi, I’m Jack Susank and welcome to my website! I’m a 3rd year computer science student at Pomona College with a passion for problem-solving, AI, and technology. Recently, I’ve been looking into Natural Language Processing (NLP), 3D Rendering/Printing, Data Visualization, and App Building. When I’m not working, studying, or learning about these things, I enjoy hiking, cooking, playing football, and spending time with my friends and family.\nThanks for visiting my site! Feel free to check out my projects and get in touch!\nFor this project, I decided to analyze the dialogue from one of my favorite TV shows (The Office) to uncover some linguistic patterns across its characters and episodes. I explored topics like the frequency of “downsizing,” character verbosity, hesitation patterns, and punctuation quirks."
  },
  {
    "objectID": "index.html#here-is-a-random-sample-of-our-data",
    "href": "index.html#here-is-a-random-sample-of-our-data",
    "title": "Resume as of 2/5/2024",
    "section": "Here is a random sample of our data",
    "text": "Here is a random sample of our data\ndf &lt;- read.csv(\"the-office_lines.csv\", fileEncoding = \"UTF-8\")\ndf |&gt;\n  sample_n(5) |&gt;\n  knitr::kable()"
  },
  {
    "objectID": "index.html#how-often-does-downsizing-come-up",
    "href": "index.html#how-often-does-downsizing-come-up",
    "title": "Resume as of 2/5/2024",
    "section": "How Often Does “Downsizing” Come Up?",
    "text": "How Often Does “Downsizing” Come Up?\ndownsizing &lt;- df |&gt;\n  # Group the data by season and episode so we can count per episode\n  group_by(Season, Episode_Number) |&gt;\n  # Keep only lines that contain the word \"downsizing\" (case-insensitive, as a whole word)\n  filter(str_detect(Line, regex(\"\\\\bdownsizing\\\\b\", ignore_case = TRUE))) |&gt;\n  mutate(count_of_downsizing_lines = n()) |&gt;\n  mutate(SeasonEp = paste0(\"S:\", Season, \" E:\", Episode_Number)) |&gt;\n  select(SeasonEp, count_of_downsizing_lines) |&gt;\n  distinct()\ndownsizing\nWhen I think of downsizing in The Office, I tend to think of the very first episode (10) so I am surprised to see that, in reality, the word appears in more lines (14) in the fourth episode."
  },
  {
    "objectID": "index.html#who-talks-the-most-in-episode-1",
    "href": "index.html#who-talks-the-most-in-episode-1",
    "title": "Resume as of 2/5/2024",
    "section": "Who Talks the Most in Episode 1?",
    "text": "Who Talks the Most in Episode 1?\n# Identify the unique characters who speak in Season 1, Episode 1\nEp1Characters &lt;- df |&gt;\n  filter(Season == 1, Episode_Number == 1) |&gt;\n  distinct(Character)\n# Analyze average words per line for those characters across the entire dataset\nAvgWordsSpoken &lt;- df |&gt;\n  # Keep only rows where the character appeared in Episode 1\n  semi_join(Ep1Characters, by = \"Character\") |&gt;\n  group_by(Character) |&gt;\n  group_by(Character) |&gt;\n  mutate(Count = str_count(Line, \"\\\\b\\\\w+\\\\b\")) |&gt;\n  # Count the total number of lines spoken by each character\n  mutate(NumLines = n()) |&gt;\n  # Compute the average number of words per line per character\n  summarise(AvgCount = mean(Count), NumLines = NumLines) |&gt;\n  arrange(desc(AvgCount)) |&gt;\n  distinct()\nAvgWordsSpoken\n\nThese results display that there is a fairly wide range of average sentence lengths. There also seems to be a correlation between speaking often and speaking a lot. In other words, characters that have a small number of lines also have a small number of words per line, and vice versa. There are, of course some exceptions to this rule, but it is particularly true for Michael Scott."
  },
  {
    "objectID": "index.html#which-character-has-the-longest-um",
    "href": "index.html#which-character-has-the-longest-um",
    "title": "Resume as of 2/5/2024",
    "section": "Which Character Has the Longest “Um”?",
    "text": "Which Character Has the Longest “Um”?\nUmTracker &lt;- df |&gt;\n  group_by(Character) |&gt;\n  # Extract any instance of \"um\", \"umm\", \"ummmm\", etc. as a whole word, case-insensitive\n  mutate(umInstances = str_extract(Line, regex(\"\\\\bum+\\\\b\", ignore_case = TRUE))) |&gt;\n  # Keep only lines where an \"um\" instance was actually found\n  filter(!is.na(umInstances)) |&gt;\n  # Measure the length (number of characters) of the longest \"um\" in each line\n  mutate(umLength = nchar(umInstances)) |&gt;\n  # Summarize by finding the longest \"um\" per character,\n  # and extract the full line where that longest \"um\" occurred\n  summarise(maxUmLength = max(umLength), maxUmLine = Line[which.max(umLength)], .groups = \"drop\") |&gt;\n  select(Character, maxUmLength, maxUmLine) |&gt;\n  arrange(desc(maxUmLength))\nUmTracker\n\nPam has the longest um! In Season 2, Episode 9, she has a line in which all she says is “Ummmm…”. It makes sense for Pam’s character to have the longest ‘um’ considering how reserved she is. This reservedness reveals itself in the previous plot in that she has a relatively small average sentence length relative to the number of lines she speaks. In fact, of all of the characters that have more than 2,000 lines, she is the only one with an average length less than 10. Being unsure of herself, it makes sense that Pam would be the only character to have this long of a hesitation written into the script."
  },
  {
    "objectID": "index.html#what-words-precede-punctuation-marks",
    "href": "index.html#what-words-precede-punctuation-marks",
    "title": "Resume as of 2/5/2024",
    "section": "What Words Precede Punctuation Marks?",
    "text": "What Words Precede Punctuation Marks?\n# Identify words that appear immediately before exclamation marks\nWowWords &lt;- df |&gt;\n  mutate(instance = str_to_lower(str_extract(Line, \"\\\\b\\\\w+(?=!)\"))) |&gt;\n  filter(!is.na(instance)) |&gt;\n  group_by(instance) |&gt;\n  summarize(count = n(), .groups = \"drop\") |&gt;\n  arrange(desc(count))\n# Identify words that appear immediately before question marks\nQuestionWords &lt;- df |&gt;\n  mutate(instance = str_to_lower(str_extract(Line, \"\\\\b\\\\w+(?=\\\\?)\"))) |&gt;\n  filter(!is.na(instance)) |&gt;\n  group_by(instance) |&gt;\n  summarize(count = n(), .groups = \"drop\") |&gt;\n  arrange(desc(count))\nPlot 1:\n```{r, fig.alt=“Horizontal bar chart showing the top 10 most frequent words immediately before an exclamation mark. ‘no’ is the most frequent, followed by ‘it’, ‘oh’, and others.”, echo=FALSE, warning=FALSE, message=FALSE} TenWowWords &lt;- WowWords |&gt; head(10)\nggplot(TenWowWords, aes(x = instance, y = count)) + geom_bar(stat = “identity”, fill = “dodgerblue”) + coord_flip() + labs(title = “10 Most Frequent Words Before ‘!’”, x = “Words”, y = “Count”) + theme_minimal()\n\nThis plot displays the 10 words that most often appear immediately before an exclamation mark. My favorite aspect of this plot is that for most of the words, you can imagine who said them and how. For example, just as the viewer may have guessed, Dwight said 'Michael!' 29 times over the course of the show, more than twice as much as any other character. Similarly, Michael ended his sentences with 'no!' and 'god!' much more often than any other character. It is also important to point out that these words differ notably from the list of 10 most used words in general.\n**Plot 2:**\n```{r, fig.alt=\"Horizontal bar chart showing the most frequent words immediately before a question mark. 'what' is the most common, followed by 'right', 'you', and others.\", echo=FALSE, warning=FALSE, message=FALSE}\nTenQuestionWords &lt;- QuestionWords |&gt;\n  head(10)\nggplot(TenQuestionWords, aes(x = instance, y = count)) +\n  geom_bar(stat = \"identity\", fill = \"dodgerblue\") +\n  coord_flip() +\n  labs(title = \"10 Most Frequent Words Before '?'\", x = \"Words\", y = \"Count\") +\n  theme_minimal()\nThis plot displays the 10 words that most often appear immediately before a question mark. Unlike the previous plot, it is difficult to imagine who typically said each word and how. However, it is still quite interesting, though not necessarily surprisingly, that there is one word, “what”, that precedes a question mark significantly more often than any other. It is also important to note that these words differ significantly from the list of 10 most used words in general.\nPlot 3:\n```{r wow-vs-question-scatter, fig.alt=“Scatter plot showing words like ‘what’, ‘no’, and ‘hey’ positioned by their relative frequencies before exclamation marks and question marks. Words vary in use, with some heavily favoring one punctuation mark.”, echo=FALSE, warning=FALSE, message=FALSE}"
  }
]